apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: services-ingress
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/tags: Name=services-ingress
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/
        alb.ingress.kubernetes.io/healthy-threshold-count: "2"
        alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
        alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "25"
        alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
        alb.ingress.kubernetes.io/security-groups: ${ingress_security_group_name}
        alb.ingress.kubernetes.io/waf-acl-id: ${waf_acl_id}
        alb.ingress.kubernetes.io/certificate-arn: ${services_cert_arn}
        alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-2016-08
        alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=true,idle_timeout.timeout_seconds=60
        alb.ingress.kubernetes.io/actions.default-404: '{"Type": "fixed-response", "FixedResponseConfig": {"ContentType":"text/plain", "StatusCode":"404", "MessageBody":"404"}}'
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
        alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
    backend:
      serviceName: default-404
      servicePort: use-annotation
    rules:
      # ALL HTTP SERVICES AFTER THIS LINE
${http_routes}

      # DO NOT REMOVE THIS REDIRECT
      - http:
          paths:
           - backend:
              serviceName: ssl-redirect
              servicePort: use-annotation

      # ALL HTTPS SERVICES AFTER THIS LINE
      - host: kube-dash.${cluster_domain}
        http:
          paths:
            - backend:
                serviceName: kubernetes-dashboard
                servicePort: 80
${https_routes}
